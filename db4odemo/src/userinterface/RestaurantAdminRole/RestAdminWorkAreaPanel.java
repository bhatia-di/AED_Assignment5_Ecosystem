/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Restaurant.MenuItem;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.stream.Collectors;

/**
 *
 * @author 18577
 */
public class RestAdminWorkAreaPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    UserAccount userAccount;
    EcoSystem ecoSystem;
    DefaultTableModel menuDirectoryTableModel;
    Restaurant currentRestaurantWorkPanel;
    DefaultComboBoxModel deliveryAgentListModel;
    DefaultTableModel orderDirectoryTableModel;
     
    
    /** Creates new form AdminWorkAreaJPanel */
    public RestAdminWorkAreaPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem) {
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecoSystem = ecoSystem;
        initMenuModel();
        initorderDirectoryTableModel();
        initdeliveryAgentListModel();

        initComponents();

        
        loadRestaurantValues();
        populateMenuItems();
        populateOrderTable();

      
        //valueLabel.setText();
    }


    private void populateOrderTable() {
        orderDirectoryTableModel.setRowCount(0);
        for (WorkRequest orderWorkRequest: currentRestaurantWorkPanel.getUserAccount().getWorkQueue().getWorkRequestList()) {
            String[] rowData = {
                    orderWorkRequest.getMessage(),
                    orderWorkRequest.getSender().getUsername(),
                    orderWorkRequest.getStatus()
            };

            orderDirectoryTableModel.addRow(rowData);
        }

    }
    private void initorderDirectoryTableModel() {
        orderDirectoryTableModel = new DefaultTableModel();
        orderDirectoryTableModel.addColumn(" Order Message");
        orderDirectoryTableModel.addColumn(" Order Sender");
        orderDirectoryTableModel.addColumn(" Order Status");


    }
    private void initdeliveryAgentListModel() {
        deliveryAgentListModel = new DefaultComboBoxModel();
        deliveryAgentListModel.addElement("-");
        for (DeliveryMan deliveryMan: ecoSystem.getDeliveryManDirectory().getDelAgents()) {
            String name = deliveryMan.getName();
            if (deliveryAgentListModel.getIndexOf(name) == -1 ) deliveryAgentListModel.addElement(name);
        }
    }
    
    private void loadRestaurantValues() {

        currentRestaurantWorkPanel = ecoSystem.getRestaurantDirectory()
                .getRestList().stream()
                .filter(restaurant ->
                    restaurant.getUserAccount().getUserAccountId().equals(userAccount.getUserAccountId())
                ).collect(Collectors.toList())
                .get(0);

        restaurantNameLabel.setText(currentRestaurantWorkPanel.getRestName());
        managerLabel.setText(currentRestaurantWorkPanel.getManagerName());
    
    }

    private void populateMenuItems() {
        menuDirectoryTableModel.setRowCount(0);

        for(MenuItem menuItem: currentRestaurantWorkPanel.getMenulist()) {
            String[] rowData = {menuItem.getMenuItemName() , "$ " + String.valueOf(menuItem.getMenuItemPrice())};
            menuDirectoryTableModel.addRow(rowData);
        }

    }

    /**
     * Creates new form RestAdminWorkAreaPanel
     */
    public RestAdminWorkAreaPanel() {
        initMenuModel();
        initComponents();
    }
    private void initMenuModel() {
        menuDirectoryTableModel = new DefaultTableModel();
        menuDirectoryTableModel.addColumn("Item Name");
        menuDirectoryTableModel.addColumn("Item Price");
       
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        restaurantNameLabel = new javax.swing.JLabel();
        hiLabel = new javax.swing.JLabel();
        managerLabel = new javax.swing.JLabel();
        adminScreenTabbedPane = new javax.swing.JTabbedPane();
        menuPanel = new javax.swing.JPanel();
        deliveryDirLabel = new javax.swing.JLabel();
        delDirectoryScollPanel = new javax.swing.JScrollPane();
        menuDirTable = new javax.swing.JTable();
        menuItemName = new javax.swing.JLabel();
        menuItemTextF = new javax.swing.JTextField();
        saveMenuItemsButton = new javax.swing.JButton();
        menuItemName1 = new javax.swing.JLabel();
        ageSlider = new javax.swing.JSlider();
        ageLabelValue = new javax.swing.JLabel();
        deleteMenuItemButton = new javax.swing.JButton();
        manageOrdersTab = new javax.swing.JPanel();
        deliveryDirLabel1 = new javax.swing.JLabel();
        delDirectoryScollPanel1 = new javax.swing.JScrollPane();
        orderDirTable = new javax.swing.JTable();
        acceptOrder = new javax.swing.JButton();
        orderStatusCombobox = new javax.swing.JComboBox<>();
        menuItemName2 = new javax.swing.JLabel();
        menuItemName3 = new javax.swing.JLabel();
        deliveryManCombox = new javax.swing.JComboBox<>();
        saveOrderDetails = new javax.swing.JButton();

        restaurantNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        restaurantNameLabel.setForeground(new java.awt.Color(0, 0, 102));
        restaurantNameLabel.setText(" ");

        hiLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        hiLabel.setForeground(new java.awt.Color(0, 0, 102));
        hiLabel.setText("Hi, ");

        managerLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        managerLabel.setForeground(new java.awt.Color(0, 0, 102));
        managerLabel.setText(" ");

        adminScreenTabbedPane.setForeground(new java.awt.Color(0, 0, 102));
        adminScreenTabbedPane.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        deliveryDirLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        deliveryDirLabel.setForeground(new java.awt.Color(0, 0, 102));
        deliveryDirLabel.setText("Menu Directory");

        menuDirTable.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        menuDirTable.setForeground(new java.awt.Color(0, 0, 102));
        menuDirTable.setModel(menuDirectoryTableModel);
        menuDirTable.setRowHeight(40);
        delDirectoryScollPanel.setViewportView(menuDirTable);

        menuItemName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        menuItemName.setForeground(new java.awt.Color(0, 0, 102));
        menuItemName.setText("Item Name:");

        menuItemTextF.setForeground(new java.awt.Color(0, 0, 102));
        menuItemTextF.setText(" ");

        saveMenuItemsButton.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        saveMenuItemsButton.setForeground(new java.awt.Color(0, 0, 102));
        saveMenuItemsButton.setText("Save");
        saveMenuItemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemsButtonActionPerformed(evt);
            }
        });

        menuItemName1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        menuItemName1.setForeground(new java.awt.Color(0, 0, 102));
        menuItemName1.setText("Item Price:");

        ageSlider.setForeground(new java.awt.Color(0, 0, 102));
        ageSlider.setMaximum(2000);
        ageSlider.setMinimum(10);
        ageSlider.setMinorTickSpacing(1);
        ageSlider.setPaintLabels(true);
        ageSlider.setSnapToTicks(true);
        ageSlider.setToolTipText("");
        ageSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ageSliderStateChanged(evt);
            }
        });

        ageLabelValue.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        ageLabelValue.setForeground(new java.awt.Color(0, 0, 102));
        ageLabelValue.setText(" ");

        deleteMenuItemButton.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        deleteMenuItemButton.setForeground(new java.awt.Color(0, 0, 102));
        deleteMenuItemButton.setText("Delete");
        deleteMenuItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMenuItemButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deliveryDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delDirectoryScollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1045, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(menuPanelLayout.createSequentialGroup()
                                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(menuItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(saveMenuItemsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(64, 64, 64)
                                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(menuPanelLayout.createSequentialGroup()
                                        .addComponent(ageSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(ageLabelValue, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(menuPanelLayout.createSequentialGroup()
                                        .addGap(579, 579, 579)
                                        .addComponent(deleteMenuItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(menuPanelLayout.createSequentialGroup()
                                .addComponent(menuItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(menuItemTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(508, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(deliveryDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(delDirectoryScollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(deleteMenuItemButton)
                .addGap(18, 18, 18)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuItemName)
                    .addComponent(menuItemTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuItemName1)
                    .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(menuPanelLayout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(ageSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(ageLabelValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(78, 78, 78)
                .addComponent(saveMenuItemsButton)
                .addContainerGap(118, Short.MAX_VALUE))
        );

        adminScreenTabbedPane.addTab("Manage Menu", menuPanel);

        deliveryDirLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        deliveryDirLabel1.setForeground(new java.awt.Color(0, 0, 102));
        deliveryDirLabel1.setText("Order Directory");

        orderDirTable.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        orderDirTable.setForeground(new java.awt.Color(0, 0, 102));
        orderDirTable.setModel(orderDirectoryTableModel);
        orderDirTable.setRowHeight(40);
        delDirectoryScollPanel1.setViewportView(orderDirTable);

        acceptOrder.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        acceptOrder.setForeground(new java.awt.Color(0, 0, 102));
        acceptOrder.setText("Manage Order");
        acceptOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptOrderActionPerformed(evt);
            }
        });

        orderStatusCombobox.setForeground(new java.awt.Color(0, 0, 102));
        orderStatusCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Accept", "Reject" }));

        menuItemName2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        menuItemName2.setForeground(new java.awt.Color(0, 0, 102));
        menuItemName2.setText("Order Status:");

        menuItemName3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        menuItemName3.setForeground(new java.awt.Color(0, 0, 102));
        menuItemName3.setText("Delivery Man:");

        deliveryManCombox.setForeground(new java.awt.Color(0, 0, 102));
        deliveryManCombox.setModel(deliveryAgentListModel);

        saveOrderDetails.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        saveOrderDetails.setForeground(new java.awt.Color(0, 0, 102));
        saveOrderDetails.setText("Save");
        saveOrderDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveOrderDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manageOrdersTabLayout = new javax.swing.GroupLayout(manageOrdersTab);
        manageOrdersTab.setLayout(manageOrdersTabLayout);
        manageOrdersTabLayout.setHorizontalGroup(
            manageOrdersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageOrdersTabLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(manageOrdersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deliveryDirLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(manageOrdersTabLayout.createSequentialGroup()
                        .addComponent(delDirectoryScollPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(manageOrdersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manageOrdersTabLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(acceptOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(manageOrdersTabLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(manageOrdersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(manageOrdersTabLayout.createSequentialGroup()
                                        .addComponent(menuItemName3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deliveryManCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(manageOrdersTabLayout.createSequentialGroup()
                                        .addComponent(menuItemName2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(orderStatusCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(saveOrderDetails))))))
                .addContainerGap(568, Short.MAX_VALUE))
        );
        manageOrdersTabLayout.setVerticalGroup(
            manageOrdersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageOrdersTabLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(deliveryDirLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(manageOrdersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageOrdersTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(delDirectoryScollPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manageOrdersTabLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(acceptOrder)
                        .addGap(13, 13, 13)
                        .addGroup(manageOrdersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderStatusCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menuItemName2))
                        .addGap(49, 49, 49)
                        .addGroup(manageOrdersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(menuItemName3)
                            .addComponent(deliveryManCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addComponent(saveOrderDetails)))
                .addContainerGap(236, Short.MAX_VALUE))
        );

        adminScreenTabbedPane.addTab("Manage Orders", manageOrdersTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(296, 296, 296)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(restaurantNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(hiLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(managerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(865, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(adminScreenTabbedPane)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(restaurantNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hiLabel)
                    .addComponent(managerLabel))
                .addContainerGap(852, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(122, Short.MAX_VALUE)
                    .addComponent(adminScreenTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveMenuItemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemsButtonActionPerformed
        // TODO add your handling code here:

        String itemName = menuItemTextF.getText().trim();
        int price = Integer.valueOf(ageLabelValue.getText());

        currentRestaurantWorkPanel.addMenuItem(itemName, price);
        populateMenuItems();




    }//GEN-LAST:event_saveMenuItemsButtonActionPerformed

    private void ageSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ageSliderStateChanged
        // TODO add your handling code here:

        ageLabelValue.setText(Integer.toString(ageSlider.getValue()));
    }//GEN-LAST:event_ageSliderStateChanged

    private void deleteMenuItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMenuItemButtonActionPerformed
        // TODO add your handling code here:

        int selected = menuDirTable.getSelectedRow();
        currentRestaurantWorkPanel.removeMenuItem(selected);
        populateMenuItems();
    }//GEN-LAST:event_deleteMenuItemButtonActionPerformed

    private void acceptOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptOrderActionPerformed

    private void saveOrderDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveOrderDetailsActionPerformed
        // TODO add your handling code here:
        WorkRequest selectedWorkRequest = currentRestaurantWorkPanel.getUserAccount().getWorkQueue().getWorkRequestList().get(orderDirTable.getSelectedRow());
        selectedWorkRequest.setStatus((String)orderStatusCombobox.getSelectedItem());
        
        
        // update customer work queue
        selectedWorkRequest.getSender().getWorkQueue().getWorkRequestList().stream()
                .filter(workRequest -> workRequest.getReqId().equals(selectedWorkRequest.getReqId()))
                .collect(Collectors.toList())
                .get(0).setStatus((String)orderStatusCombobox.getSelectedItem());
        
        //update delivery work queue
        String status = (String)orderStatusCombobox.getSelectedItem();

        if (status.equals("Accept")) {

            DeliveryMan selectedDeliveryMan = ecoSystem.getDeliveryManDirectory().getDelAgents()
                    .stream().filter(delMan -> delMan.getName().equals((String)deliveryManCombox.getSelectedItem())) .collect(Collectors.toList())
                    .get(0);

            selectedDeliveryMan.getUserAccount().getWorkQueue().getWorkRequestList().add(selectedWorkRequest);




        }
        

        
        
    }//GEN-LAST:event_saveOrderDetailsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptOrder;
    private javax.swing.JTabbedPane adminScreenTabbedPane;
    private javax.swing.JLabel ageLabelValue;
    private javax.swing.JSlider ageSlider;
    private javax.swing.JScrollPane delDirectoryScollPanel;
    private javax.swing.JScrollPane delDirectoryScollPanel1;
    private javax.swing.JButton deleteMenuItemButton;
    private javax.swing.JLabel deliveryDirLabel;
    private javax.swing.JLabel deliveryDirLabel1;
    private javax.swing.JComboBox<String> deliveryManCombox;
    private javax.swing.JLabel hiLabel;
    private javax.swing.JPanel manageOrdersTab;
    private javax.swing.JLabel managerLabel;
    private javax.swing.JTable menuDirTable;
    private javax.swing.JLabel menuItemName;
    private javax.swing.JLabel menuItemName1;
    private javax.swing.JLabel menuItemName2;
    private javax.swing.JLabel menuItemName3;
    private javax.swing.JTextField menuItemTextF;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JTable orderDirTable;
    private javax.swing.JComboBox<String> orderStatusCombobox;
    private javax.swing.JLabel restaurantNameLabel;
    private javax.swing.JButton saveMenuItemsButton;
    private javax.swing.JButton saveOrderDetails;
    // End of variables declaration//GEN-END:variables
}

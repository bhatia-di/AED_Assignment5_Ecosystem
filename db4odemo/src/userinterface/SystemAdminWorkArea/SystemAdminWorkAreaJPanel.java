/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.EcoSystem;

import Business.Employee.Employee;
import Business.Organization;
import Business.Restaurant.Restaurant;
import Business.Role.AdminRole;
import Business.Role.CustomerRole;
import Business.Role.Role;
import Business.UserAccount.UserAccount;

import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author
 */
public class SystemAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminWorkAreaJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    DefaultTableModel customerDirectoryTableModel;
    DefaultTableModel restDirectoryTableModel;

    public SystemAdminWorkAreaJPanel(JPanel userProcessContainer,EcoSystem ecosystem) {
        initPersonDirModel();
        initRestDirModel();
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.ecosystem=ecosystem;
        populateTree();
        populateCustomerDirectoryTable();
        populateRestaurantDirectoryTable();

    }
    
     private void initPersonDirModel() {
        restDirectoryTableModel = new DefaultTableModel();
         restDirectoryTableModel.addColumn("Restaurant Name");
         restDirectoryTableModel.addColumn("Restaurant Location");
         restDirectoryTableModel.addColumn("Restaurant Phone Number");
         restDirectoryTableModel.addColumn("Restaurant Cuisines");
         restDirectoryTableModel.addColumn("Manager Name");
         restDirectoryTableModel.addColumn("Username");
         restDirectoryTableModel.addColumn("Password");

    }

    private void initRestDirModel() {
        customerDirectoryTableModel = new DefaultTableModel();
        customerDirectoryTableModel.addColumn("Name");
        customerDirectoryTableModel.addColumn("Age");
        customerDirectoryTableModel.addColumn("Address");
        customerDirectoryTableModel.addColumn("Username");
        customerDirectoryTableModel.addColumn("Password");

    }

    public void populateTree(){
        DefaultTreeModel model=(DefaultTreeModel)jTree.getModel();
       // Add the code for draw your system structure shown by JTree
       
        model.reload();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree = new javax.swing.JTree();
        jPanel2 = new javax.swing.JPanel();
        adminScreenTabbedPane = new javax.swing.JTabbedPane();
        deliveryAGentDirJPanel = new javax.swing.JPanel();
        personJPanel = new javax.swing.JPanel();
        personDirectoryScollPanel = new javax.swing.JScrollPane();
        personDirTable = new javax.swing.JTable();
        createButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        personDirLabel = new javax.swing.JLabel();
        personDirAdminHeaderLabel = new javax.swing.JLabel();
        personNameLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        ageSlider = new javax.swing.JSlider();
        saveChangesButton = new javax.swing.JButton();
        personNameTextField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        addressTextField = new javax.swing.JTextField();
        ageLabelValue = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        paswdLabel = new javax.swing.JLabel();
        paswdPaswdField = new javax.swing.JPasswordField();
        restAdminJpanel = new javax.swing.JPanel();
        restDirLabel = new javax.swing.JLabel();
        restDirectoryScollPanel = new javax.swing.JScrollPane();
        restDirTable = new javax.swing.JTable();
        createButtonRest = new javax.swing.JButton();
        updateRestButton = new javax.swing.JButton();
        viewRestButton = new javax.swing.JButton();
        deleteRestButton = new javax.swing.JButton();
        restDirAdminHeaderLabel = new javax.swing.JLabel();
        restNameLabel = new javax.swing.JLabel();
        restNameTextField = new javax.swing.JTextField();
        restLocLabel = new javax.swing.JLabel();
        restLocTextField = new javax.swing.JTextField();
        restPhnLabel = new javax.swing.JLabel();
        restPhnTextField = new javax.swing.JTextField();
        restNameLabel3 = new javax.swing.JLabel();
        restManagerNameTextField = new javax.swing.JTextField();
        restNameLabel4 = new javax.swing.JLabel();
        restManagerUserNameTextField = new javax.swing.JTextField();
        restNameLabel5 = new javax.swing.JLabel();
        saveChangesRestDirButton = new javax.swing.JButton();
        allergyLabel = new javax.swing.JLabel();
        allergyJListPane = new javax.swing.JScrollPane();
        cusineList = new javax.swing.JList<>();
        restManagerPaswdField = new javax.swing.JPasswordField();

        setLayout(new java.awt.BorderLayout());

        jTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1194, Short.MAX_VALUE)
        );

        jSplitPane.setLeftComponent(jPanel1);

        adminScreenTabbedPane.setForeground(new java.awt.Color(0, 0, 102));
        adminScreenTabbedPane.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        javax.swing.GroupLayout deliveryAGentDirJPanelLayout = new javax.swing.GroupLayout(deliveryAGentDirJPanel);
        deliveryAGentDirJPanel.setLayout(deliveryAGentDirJPanelLayout);
        deliveryAGentDirJPanelLayout.setHorizontalGroup(
            deliveryAGentDirJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1559, Short.MAX_VALUE)
        );
        deliveryAGentDirJPanelLayout.setVerticalGroup(
            deliveryAGentDirJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 888, Short.MAX_VALUE)
        );

        adminScreenTabbedPane.addTab("Delivery Agents Directory", deliveryAGentDirJPanel);

        personJPanel.setForeground(new java.awt.Color(0, 0, 102));

        personDirTable.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        personDirTable.setForeground(new java.awt.Color(0, 0, 102));
        personDirTable.setModel(customerDirectoryTableModel);
        personDirTable.setRowHeight(40);
        personDirectoryScollPanel.setViewportView(personDirTable);

        createButton.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        createButton.setForeground(new java.awt.Color(0, 0, 102));
        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        updateButton.setForeground(new java.awt.Color(0, 0, 102));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        viewButton.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        viewButton.setForeground(new java.awt.Color(0, 0, 102));
        viewButton.setText("View ");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(0, 0, 102));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        personDirLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        personDirLabel.setForeground(new java.awt.Color(0, 0, 102));
        personDirLabel.setText("Customer Directory");

        personDirAdminHeaderLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        personDirAdminHeaderLabel.setForeground(new java.awt.Color(0, 0, 102));
        personDirAdminHeaderLabel.setText(" ");

        personNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        personNameLabel.setForeground(new java.awt.Color(0, 0, 102));
        personNameLabel.setText("Name :");

        ageLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ageLabel.setForeground(new java.awt.Color(0, 0, 102));
        ageLabel.setText("Age:");

        ageSlider.setForeground(new java.awt.Color(0, 0, 102));
        ageSlider.setMinimum(1);
        ageSlider.setMinorTickSpacing(1);
        ageSlider.setPaintLabels(true);
        ageSlider.setSnapToTicks(true);
        ageSlider.setToolTipText("");
        ageSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ageSliderStateChanged(evt);
            }
        });

        saveChangesButton.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        saveChangesButton.setForeground(new java.awt.Color(0, 0, 102));
        saveChangesButton.setText("Save");
        saveChangesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveChangesButtonActionPerformed(evt);
            }
        });

        personNameTextField.setForeground(new java.awt.Color(0, 0, 102));
        personNameTextField.setText(" ");

        addressLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        addressLabel.setForeground(new java.awt.Color(0, 0, 102));
        addressLabel.setText("Address: ");

        addressTextField.setForeground(new java.awt.Color(0, 0, 102));
        addressTextField.setText(" ");

        ageLabelValue.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        ageLabelValue.setForeground(new java.awt.Color(0, 0, 102));
        ageLabelValue.setText(" ");

        userNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        userNameLabel.setForeground(new java.awt.Color(0, 0, 102));
        userNameLabel.setText("UserName: ");

        userNameTextField.setForeground(new java.awt.Color(0, 0, 102));
        userNameTextField.setText(" ");
        userNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTextFieldActionPerformed(evt);
            }
        });

        paswdLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        paswdLabel.setForeground(new java.awt.Color(0, 0, 102));
        paswdLabel.setText("Password");

        javax.swing.GroupLayout personJPanelLayout = new javax.swing.GroupLayout(personJPanel);
        personJPanel.setLayout(personJPanelLayout);
        personJPanelLayout.setHorizontalGroup(
            personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createButton)
                .addGap(18, 18, 18)
                .addComponent(updateButton)
                .addGap(18, 18, 18)
                .addComponent(viewButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteButton)
                .addGap(47, 47, 47))
            .addGroup(personJPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personJPanelLayout.createSequentialGroup()
                        .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveChangesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(personJPanelLayout.createSequentialGroup()
                        .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(personJPanelLayout.createSequentialGroup()
                                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(personNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(personNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(personJPanelLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(personDirectoryScollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1506, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(personDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(personDirAdminHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(personJPanelLayout.createSequentialGroup()
                                .addComponent(paswdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(personJPanelLayout.createSequentialGroup()
                                        .addComponent(ageSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(ageLabelValue, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(paswdPaswdField, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        personJPanelLayout.setVerticalGroup(
            personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personJPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(personDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(personDirectoryScollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(updateButton)
                    .addComponent(viewButton)
                    .addComponent(createButton)
                    .addComponent(personDirAdminHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(personNameLabel)
                    .addComponent(personNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personJPanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(userNameLabel))
                    .addGroup(personJPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paswdLabel)
                    .addComponent(paswdPaswdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personJPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(ageSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personJPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ageLabelValue, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageLabel))
                        .addGap(47, 47, 47)))
                .addGroup(personJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel)
                    .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(saveChangesButton)
                .addGap(80, 80, 80))
        );

        adminScreenTabbedPane.addTab("Customer Directory", personJPanel);

        restAdminJpanel.setForeground(new java.awt.Color(0, 0, 102));
        restAdminJpanel.setAutoscrolls(true);

        restDirLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        restDirLabel.setForeground(new java.awt.Color(0, 0, 102));
        restDirLabel.setText("Restaurant Directory");

        restDirTable.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        restDirTable.setForeground(new java.awt.Color(0, 0, 102));
        restDirTable.setModel(restDirectoryTableModel);
        restDirTable.setRowHeight(40);
        restDirectoryScollPanel.setViewportView(restDirTable);

        createButtonRest.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        createButtonRest.setForeground(new java.awt.Color(0, 0, 102));
        createButtonRest.setText("Create");
        createButtonRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonRestActionPerformed(evt);
            }
        });

        updateRestButton.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        updateRestButton.setForeground(new java.awt.Color(0, 0, 102));
        updateRestButton.setText("Update");
        updateRestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRestButtonActionPerformed(evt);
            }
        });

        viewRestButton.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        viewRestButton.setForeground(new java.awt.Color(0, 0, 102));
        viewRestButton.setText("View ");
        viewRestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRestButtonActionPerformed(evt);
            }
        });

        deleteRestButton.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        deleteRestButton.setForeground(new java.awt.Color(0, 0, 102));
        deleteRestButton.setText("Delete");
        deleteRestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRestButtonActionPerformed(evt);
            }
        });

        restDirAdminHeaderLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        restDirAdminHeaderLabel.setForeground(new java.awt.Color(0, 0, 102));
        restDirAdminHeaderLabel.setText(" ");

        restNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        restNameLabel.setForeground(new java.awt.Color(0, 0, 102));
        restNameLabel.setText("Restaurant Name :");

        restNameTextField.setForeground(new java.awt.Color(0, 0, 102));
        restNameTextField.setText(" ");

        restLocLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        restLocLabel.setForeground(new java.awt.Color(0, 0, 102));
        restLocLabel.setText("Restaurant Name :");

        restLocTextField.setForeground(new java.awt.Color(0, 0, 102));
        restLocTextField.setText(" ");

        restPhnLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        restPhnLabel.setForeground(new java.awt.Color(0, 0, 102));
        restPhnLabel.setText("Phone Number :");

        restPhnTextField.setForeground(new java.awt.Color(0, 0, 102));
        restPhnTextField.setText(" ");

        restNameLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        restNameLabel3.setForeground(new java.awt.Color(0, 0, 102));
        restNameLabel3.setText("Manager Name:");

        restManagerNameTextField.setForeground(new java.awt.Color(0, 0, 102));
        restManagerNameTextField.setText(" ");

        restNameLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        restNameLabel4.setForeground(new java.awt.Color(0, 0, 102));
        restNameLabel4.setText("Manager User Name:");

        restManagerUserNameTextField.setForeground(new java.awt.Color(0, 0, 102));
        restManagerUserNameTextField.setText(" ");

        restNameLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        restNameLabel5.setForeground(new java.awt.Color(0, 0, 102));
        restNameLabel5.setText("Manager Password:");

        saveChangesRestDirButton.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        saveChangesRestDirButton.setForeground(new java.awt.Color(0, 0, 102));
        saveChangesRestDirButton.setText("Save");
        saveChangesRestDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveChangesRestDirButtonActionPerformed(evt);
            }
        });

        allergyLabel.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        allergyLabel.setForeground(new java.awt.Color(0, 0, 102));
        allergyLabel.setText("Cusinies:");

        cusineList.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        cusineList.setForeground(new java.awt.Color(0, 0, 102));
        cusineList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Chinese", "Indian", "American", "Italian", "Fusion", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        allergyJListPane.setViewportView(cusineList);

        javax.swing.GroupLayout restAdminJpanelLayout = new javax.swing.GroupLayout(restAdminJpanel);
        restAdminJpanel.setLayout(restAdminJpanelLayout);
        restAdminJpanelLayout.setHorizontalGroup(
            restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(restAdminJpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, restAdminJpanelLayout.createSequentialGroup()
                        .addComponent(restDirAdminHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createButtonRest)
                        .addGap(18, 18, 18)
                        .addComponent(updateRestButton)
                        .addGap(18, 18, 18)
                        .addComponent(viewRestButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteRestButton)
                        .addGap(193, 193, 193))
                    .addGroup(restAdminJpanelLayout.createSequentialGroup()
                        .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(restDirectoryScollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1506, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveChangesRestDirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(restAdminJpanelLayout.createSequentialGroup()
                                .addComponent(restNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(restNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(allergyLabel))
                            .addGroup(restAdminJpanelLayout.createSequentialGroup()
                                .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(restNameLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(restNameLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(54, 54, 54)
                                .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(restManagerUserNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                                    .addComponent(restManagerPaswdField)))
                            .addGroup(restAdminJpanelLayout.createSequentialGroup()
                                .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(restAdminJpanelLayout.createSequentialGroup()
                                        .addComponent(restLocLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)
                                        .addComponent(restLocTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(restAdminJpanelLayout.createSequentialGroup()
                                        .addComponent(restPhnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)
                                        .addComponent(restPhnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(restAdminJpanelLayout.createSequentialGroup()
                                        .addComponent(restNameLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)
                                        .addComponent(restManagerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(41, 41, 41)
                                .addComponent(allergyJListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(47, Short.MAX_VALUE))))
        );
        restAdminJpanelLayout.setVerticalGroup(
            restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(restAdminJpanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(restDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(restDirectoryScollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteRestButton)
                    .addComponent(updateRestButton)
                    .addComponent(viewRestButton)
                    .addComponent(createButtonRest)
                    .addComponent(restDirAdminHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(restNameLabel)
                        .addComponent(restNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(restAdminJpanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(allergyLabel)))
                .addGap(18, 18, 18)
                .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(restAdminJpanelLayout.createSequentialGroup()
                        .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restLocLabel)
                            .addComponent(restLocTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restPhnLabel)
                            .addComponent(restPhnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restNameLabel3)
                            .addComponent(restManagerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addGroup(restAdminJpanelLayout.createSequentialGroup()
                        .addComponent(allergyJListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)))
                .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(restNameLabel4)
                    .addComponent(restManagerUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(restAdminJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(restNameLabel5)
                    .addComponent(restManagerPaswdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(saveChangesRestDirButton)
                .addGap(96, 96, 96))
        );

        adminScreenTabbedPane.addTab("Restaurant Admin", restAdminJpanel);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminScreenTabbedPane))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminScreenTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 938, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(250, Short.MAX_VALUE))
        );

        jSplitPane.setRightComponent(jPanel2);

        add(jSplitPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTreeValueChanged
        
        DefaultMutableTreeNode selectedNode= (DefaultMutableTreeNode)jTree.getLastSelectedPathComponent();
        if(selectedNode!=null){
            //lblSelectedNode.setText(selectedNode.toString());
        }
    }//GEN-LAST:event_jTreeValueChanged

    private void userNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameTextFieldActionPerformed

    private void saveChangesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChangesButtonActionPerformed
        // TODO add your handling code here:

        if (personDirAdminHeaderLabel.getText().contains("Create")) {

            //ArrayList<Person> personDir = personDirectory.getPeople();
            Customer newCust = new Customer();
            int resp = saveCustChangesFromUItoCustObject(newCust);
            if (resp == 1) {

                Employee newEmployee = ecosystem.getEmployeeDirectory().createEmployee(newCust.getName());
                UserAccount newUserAccount = ecosystem.getUserAccountDirectory().createUserAccount(userNameTextField.getText().trim(),
                    String.valueOf(paswdPaswdField.getPassword()), newEmployee, new CustomerRole());
                newCust.setUserAccount(newUserAccount);
                ecosystem.getCustomerDirectory().createCustomer(newCust);
                populateCustomerDirectoryTable();
                JOptionPane.showConfirmDialog(null,
                    "Created customer record successfully!",
                    "Success!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);

                //populateSearchTableHistory(carCatalog.getCars());

            }

        }

        if (personDirAdminHeaderLabel.getText().contains("Update")) {
            int selectedIndex = personDirTable.getSelectedRow();
            Customer personRecord = ecosystem.getCustomerDirectory().getPersonAtIndex(selectedIndex);
            int resp = saveCustChangesFromUItoCustObject(personRecord);
            if (resp == 1) {
                ecosystem.getEmployeeDirectory().setEmployeeName(personRecord.getName(), personRecord.getUserAccount().getEmployee().getId());
                ecosystem.getUserAccountDirectory().updateUserAccountValues(personRecord.getUserAccount().getUserAccountId(), userNameTextField.getText().trim(), String.valueOf(paswdPaswdField.getPassword()));

                ecosystem.getCustomerDirectory().setPersonAtIndex(selectedIndex, personRecord);
                populateCustomerDirectoryTable();

                JOptionPane.showConfirmDialog(null,
                    "Person Record updated successfully!",
                    "Success!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);

            }

            setAllTextFieldsForCustomerNull();

        }

    }//GEN-LAST:event_saveChangesButtonActionPerformed

    private void ageSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ageSliderStateChanged
        // TODO add your handling code here:

        ageLabelValue.setText(Integer.toString(ageSlider.getValue()));
    }//GEN-LAST:event_ageSliderStateChanged

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        updateAdminHeader("Deleting selected record.");

        int selectedRowIndex = personDirTable.getSelectedRow();

        if(selectedRowIndex == -1) {
            JOptionPane.showConfirmDialog(null,
                "No record selected to delete the row",
                "Error!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE);
            return;
        }

        int response = JOptionPane.showConfirmDialog(null, "Do you want to delete selected record?");
        if(response == 0) {
            ecosystem.getCustomerDirectory().removePersonAtIndex(selectedRowIndex);
        }
        populateCustomerDirectoryTable();

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        updateAdminHeader("Viewing record below");

        int selectedRowIndex = personDirTable.getSelectedRow();

        if(selectedRowIndex == -1) {
            JOptionPane.showConfirmDialog(null, "No record selected to view the row", "Error!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE);
            return;
        }

        setValuesInForm(selectedRowIndex);
        setAllTextFieldsForCustomerDisabled();
    }//GEN-LAST:event_viewButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        updateAdminHeader("Update Person record");
        setAllTextFieldsForCustomerEnabled();

        int selectedRowIndex = personDirTable.getSelectedRow();

        if(selectedRowIndex == -1) {
            JOptionPane.showConfirmDialog(null,
                "No record selected to update the row", "Error!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE);
            return;
        }

        setValuesInForm(selectedRowIndex);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        // TODO add your handling code here:
        updateAdminHeader("Create Customer record");
        setAllTextFieldsForCustomerEnabled();
    }//GEN-LAST:event_createButtonActionPerformed

    private void createButtonRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonRestActionPerformed
        // TODO add your handling code here:
         updateResDirHeader("Create Restaurant record");
        setAllTextFieldsForRestEnabled();
    }//GEN-LAST:event_createButtonRestActionPerformed

    private void updateRestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRestButtonActionPerformed
        // TODO add your handling code here:
          updateResDirHeader("Update Restaurant record");
        setAllTextFieldsForRestEnabled();
    }//GEN-LAST:event_updateRestButtonActionPerformed

    private void viewRestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRestButtonActionPerformed
        // TODO add your handling code here:



        updateResDirHeader("Viewing Restaurant below");

        int selectedRowIndex = restDirTable.getSelectedRow();

        if(selectedRowIndex == -1) {
            JOptionPane.showConfirmDialog(null, "No record selected to view the row", "Error!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);
            return;
        }

        setValuesInRestDirForm(selectedRowIndex);
        setAllTextFieldsForRestDisabled();
    }//GEN-LAST:event_viewRestButtonActionPerformed

    private void deleteRestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRestButtonActionPerformed
        //

        updateResDirHeader("Delete Restaurant record");

        int selectedRowIndex = restDirTable.getSelectedRow();

        if(selectedRowIndex == -1) {
            JOptionPane.showConfirmDialog(null,
                    "No record selected to delete the row",
                    "Error!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);
            return;
        }

        int response = JOptionPane.showConfirmDialog(null, "Do you want to delete selected record?");
        if(response == 0) {
            ecosystem.getRestaurantDirectory().removeRestaurantAtIndex(selectedRowIndex);
        }
        populateRestaurantDirectoryTable();
    }//GEN-LAST:event_deleteRestButtonActionPerformed

    private void saveChangesRestDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChangesRestDirButtonActionPerformed
        // TODO add your handling code here:
        
        
        if (restDirAdminHeaderLabel.getText().contains("Create")) {

            //ArrayList<Person> personDir = personDirectory.getPeople();
            Restaurant newRest = new Restaurant();
            int resp = saveRestChangesFromUItoRestObject(newRest);
            if (resp == 1) {



                Employee newEmployee = ecosystem.getEmployeeDirectory().createEmployee(newRest.getManagerName());
                UserAccount newUserAccount = ecosystem.getUserAccountDirectory().createUserAccount(restManagerUserNameTextField.getText().trim(),
                    String.valueOf(restManagerPaswdField.getPassword()), newEmployee, new AdminRole());
                newRest.setUserAccount(newUserAccount);
                ecosystem.getRestaurantDirectory().createRestaurant(newRest);
                populateRestaurantDirectoryTable();
                JOptionPane.showConfirmDialog(null,
                    "Created restaurant record successfully!",
                    "Success!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);


            }

        }

        if (restDirAdminHeaderLabel.getText().contains("Update")) {
            int selectedIndex = restDirTable.getSelectedRow();
            Restaurant restaurantRecord = ecosystem.getRestaurantDirectory().getRestAtIndex(selectedIndex);
            int resp = saveRestChangesFromUItoRestObject(restaurantRecord);
            if (resp == 1) {
                ecosystem.getEmployeeDirectory().setEmployeeName(restaurantRecord.getRestName(), restaurantRecord.getUserAccount().getEmployee().getId());
                ecosystem.getUserAccountDirectory().updateUserAccountValues(restaurantRecord.getUserAccount().getUserAccountId(),
                        restManagerUserNameTextField.getText().trim(),
                        String.valueOf(restManagerPaswdField.getPassword()));

                ecosystem.getRestaurantDirectory().setRestaurantAtIndex(selectedIndex, restaurantRecord);
                populateRestaurantDirectoryTable();

                JOptionPane.showConfirmDialog(null,
                    "Restaurant Record updated successfully!",
                    "Success!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);

            }

            setAllTextFieldsForRestNull();

        }
    }//GEN-LAST:event_saveChangesRestDirButtonActionPerformed
    private void updateAdminHeader(String text) {
        personDirAdminHeaderLabel.setText(text);
    }    
    
    private void updateResDirHeader(String text) {
        restDirAdminHeaderLabel.setText(text);
    }
    
    
    private void setValuesInForm(int selectedRowIndex) {
        Customer customerRecord = ecosystem.getCustomerDirectory().getPersonAtIndex(selectedRowIndex);
        personNameTextField.setText(customerRecord.getName());
        ageSlider.setValue(customerRecord.getAge());
        addressTextField.setText(customerRecord.getAddress());
        userNameTextField.setText(customerRecord.getUserAccount().getUsername());
        
    }    


    private void setValuesInRestDirForm(int selectedRowIndex) {
        Restaurant restRecord = ecosystem.getRestaurantDirectory().getRestAtIndex(selectedRowIndex);
        restNameTextField.setText(restRecord.getRestName());
        restLocTextField.setEnabled(false);
        restPhnTextField.setEnabled(false);
        restManagerNameTextField.setEnabled(false);
        restManagerPaswdField.setEnabled(false);
        restManagerUserNameTextField.setEnabled(false);
        cusineList.setEnabled(false);

    }
    private void populateCustomerDirectoryTable() {
    
        customerDirectoryTableModel.setRowCount(0);
        for(Customer c: ecosystem.getCustomerDirectory().getCustomers()) {
            
            String[] rowData = {c.getName(), Integer.toString(c.getAge()), c.getAddress(), c.getUserAccount().getUsername(), c.getUserAccount().getPassword()};
            customerDirectoryTableModel.addRow(rowData);
        }
    
    }

    private void populateRestaurantDirectoryTable() {

        restDirectoryTableModel.setRowCount(0);
        for(Restaurant r: ecosystem.getRestaurantDirectory().getRestList()) {

            String[] rowData = {
                    r.getRestName(),
                    r.getRestLocation(),
                    String.valueOf(r.getPhoneNumber()),
                    r.getCuisine().toString(),
                    r.getManagerName(),
                    r.getUserAccount().getUsername(),
                    r.getUserAccount().getPassword()};
            customerDirectoryTableModel.addRow(rowData);
        }

    }


    private void setAllTextFieldsForCustomerNull () {
        personNameTextField.setText("");
        addressTextField.setText("");
        userNameTextField.setText("");
        ageSlider.setValue(20);
    }

    
    private void setAllTextFieldsForRestNull () {
          restNameTextField.setText("");
        restLocTextField.setText("");
        restPhnTextField.setText("");
        restManagerNameTextField.setText("");
        restManagerPaswdField.setText("");
        restManagerUserNameTextField.setText("");
    }

    private void setAllTextFieldsForCustomerEnabled () {
        personNameTextField.setEnabled(true);
        addressTextField.setEnabled(true);
        userNameTextField.setEnabled(true);
        paswdPaswdField.setEnabled(true);
        ageSlider.setEnabled(true);
    }
    
    
    
     private void setAllTextFieldsForRestEnabled () {
        restNameTextField.setEnabled(true);
        restLocTextField.setEnabled(true);
        restPhnTextField.setEnabled(true);
        restManagerNameTextField.setEnabled(true);
        restManagerPaswdField.setEnabled(true);
        restManagerUserNameTextField.setEnabled(true);
        cusineList.setEnabled(true);

    }
     private void setAllTextFieldsForRestDisabled () {
        restNameTextField.setEnabled(false);
        restLocTextField.setEnabled(false);
        restPhnTextField.setEnabled(false);
        restManagerNameTextField.setEnabled(false);
         restManagerPaswdField.setEnabled(false);
        restManagerUserNameTextField.setEnabled(false);
        cusineList.setEnabled(false);

    }


    private void setAllTextFieldsForCustomerDisabled () {
        personNameTextField.setEnabled(false);
        addressTextField.setEnabled(false);
        userNameTextField.setEnabled(false);
        paswdPaswdField.setEnabled(false);
        ageSlider.setEnabled(false);
    }



    private int saveCustChangesFromUItoCustObject(Customer cust) {
        String name = personNameTextField.getText().trim();
        int age = ageSlider.getValue();
        String address = addressTextField.getText().trim();
        String userName = userNameTextField.getText().trim();
        String password = String.valueOf(paswdPaswdField.getPassword());
               

        if (name.isEmpty()) {

            JOptionPane.showConfirmDialog(null, "Please verify values for Customer name. It should non-empty.", "Error!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);
            return 0;

        }

        if (userName.isEmpty()) {
            JOptionPane.showConfirmDialog(null, "Please verify values for User name. It should non-empty.", "Error!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);
            return 0;


        }
         if (password.isEmpty()) {
            JOptionPane.showConfirmDialog(null, "Please verify values for Password. It should non-empty.", "Error!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);
            return 0;


        }
         
        cust.setAge(age);
        cust.setName(name);
        cust.setAddress(address);

        return 1;

    
    
    }


    private int saveRestChangesFromUItoRestObject(Restaurant restaurant) {


        String restName = restNameTextField.getText().trim();
        String restLoc = restLocTextField.getText().trim();
        String restPhone = restPhnTextField.getText().trim();
        String restManager = restManagerNameTextField.getText().trim();
        String restUserName = restManagerUserNameTextField.getText().trim();
        String restPaswd = String.valueOf(restManagerPaswdField.getPassword());
        List<String> cusines = cusineList.getSelectedValuesList();



        if (restName.isEmpty()) {

            JOptionPane.showConfirmDialog(null, "Please verify values for Restaurant name. It should non-empty.", "Error!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);
            return 0;

        }

        if (restLoc.isEmpty()) {
            JOptionPane.showConfirmDialog(null, "Please verify values for Restaurant Location. It should non-empty.", "Error!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);
            return 0;


        }
        if (restUserName.isEmpty()) {
            JOptionPane.showConfirmDialog(null, "Please verify values for Manager Username. It should non-empty.", "Error!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);
            return 0;


        }

        if (restPaswd.isEmpty()) {
            JOptionPane.showConfirmDialog(null, "Please verify values for Manager Paswd. It should non-empty.", "Error!",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE);
            return 0;


        }
        restaurant.setRestName(restName);
        restaurant.setRestLocation(restLoc);
        restaurant.setPhoneNumber(Long.valueOf(restPhone));
        restaurant.setManagerName(restManager);
        restaurant.setCuisine(cusines);



        return 1;



    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JTabbedPane adminScreenTabbedPane;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JLabel ageLabelValue;
    private javax.swing.JSlider ageSlider;
    private javax.swing.JScrollPane allergyJListPane;
    private javax.swing.JLabel allergyLabel;
    private javax.swing.JButton createButton;
    private javax.swing.JButton createButtonRest;
    private javax.swing.JList<String> cusineList;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteRestButton;
    private javax.swing.JPanel deliveryAGentDirJPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane;
    private javax.swing.JTree jTree;
    private javax.swing.JLabel paswdLabel;
    private javax.swing.JPasswordField paswdPaswdField;
    private javax.swing.JLabel personDirAdminHeaderLabel;
    private javax.swing.JLabel personDirLabel;
    private javax.swing.JTable personDirTable;
    private javax.swing.JScrollPane personDirectoryScollPanel;
    private javax.swing.JPanel personJPanel;
    private javax.swing.JLabel personNameLabel;
    private javax.swing.JTextField personNameTextField;
    private javax.swing.JPanel restAdminJpanel;
    private javax.swing.JLabel restDirAdminHeaderLabel;
    private javax.swing.JLabel restDirLabel;
    private javax.swing.JTable restDirTable;
    private javax.swing.JScrollPane restDirectoryScollPanel;
    private javax.swing.JLabel restLocLabel;
    private javax.swing.JTextField restLocTextField;
    private javax.swing.JTextField restManagerNameTextField;
    private javax.swing.JPasswordField restManagerPaswdField;
    private javax.swing.JTextField restManagerUserNameTextField;
    private javax.swing.JLabel restNameLabel;
    private javax.swing.JLabel restNameLabel3;
    private javax.swing.JLabel restNameLabel4;
    private javax.swing.JLabel restNameLabel5;
    private javax.swing.JTextField restNameTextField;
    private javax.swing.JLabel restPhnLabel;
    private javax.swing.JTextField restPhnTextField;
    private javax.swing.JButton saveChangesButton;
    private javax.swing.JButton saveChangesRestDirButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton updateRestButton;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameTextField;
    private javax.swing.JButton viewButton;
    private javax.swing.JButton viewRestButton;
    // End of variables declaration//GEN-END:variables
}
